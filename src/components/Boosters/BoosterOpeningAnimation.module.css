/* ... (styles précédents) */

.card.holographic {
  position: relative;
  overflow: hidden;
}

.holographicOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--holographic-gradient,
    linear-gradient(
      var(--holographic-angle, 0deg),
      var(--holographic-colors)
    )
  );
  mix-blend-mode: overlay;
  opacity: var(--holographic-intensity, 0.2);
  pointer-events: none;
  transform: rotate(var(--holographic-angle, 0deg));
  transition: transform calc(var(--holographic-speed, 1) * 0.2s) ease-out;
}

.card.revealed .holographicOverlay {
  animation: holographic-shine calc(var(--holographic-speed, 1) * 5s) linear infinite;
}

@keyframes holographic-shine {
  0% {
    opacity: var(--holographic-intensity);
    transform: rotate(0deg) translateY(-100%);
  }
  25% {
    opacity: calc(var(--holographic-intensity) * 1.5);
  }
  50% {
    opacity: var(--holographic-intensity);
    transform: rotate(180deg) translateY(100%);
  }
  75% {
    opacity: calc(var(--holographic-intensity) * 0.5);
  }
  100% {
    opacity: var(--holographic-intensity);
    transform: rotate(360deg) translateY(-100%);
  }
}

@keyframes card-flip {
  0% {
    transform: perspective(1000px) rotateY(180deg) scale(0);
    filter: brightness(0.5);
  }
  50% {
    transform: perspective(1000px) rotateY(90deg) scale(0.8);
    filter: brightness(1.2);
  }
  100% {
    transform: perspective(1000px) rotateY(0) scale(1);
    filter: brightness(1);
  }
}

/* Optimisations de performance */
.card {
  will-change: transform, opacity;
  backface-visibility: hidden;
  transform: translateZ(0);
}

.holographicOverlay {
  will-change: transform, opacity;
  transform: translateZ(0);
}

.particleCanvas {
  will-change: transform;
  transform: translateZ(0);
}
